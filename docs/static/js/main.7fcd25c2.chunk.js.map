{"version":3,"sources":["types/types.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","firebase/firebaseConfig.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","notes","active","loading","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","respuesta","ok","json","cloudResp","secure_url","loadNotes","collection","get","notesSnap","forEach","snapHijo","push","data","activeNote","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","value","NotesAppBar","useDispatch","useSelector","fecha","moment","Date","getTime","className","format","style","display","onChange","e","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleting","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","catch","message","logout","JournalEntry","date","noteDate","backgroundSize","backgroundImage","JournalEntries","Sidebar","signOut","newNote","add","docRef","NothingSelected","JournalScreen","LoginScreen","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7fcd25c2.chunk.js","sourcesContent":["\r\n\r\nexport const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set error',\r\n    uiRemoveError: '[UI] remove error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n        return {\r\n            ...state,\r\n            notes: [ action.payload, ...state.notes]\r\n        }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [ ...action.payload]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                     note => note.id === action.payload.id \r\n                        ? action.payload.note: note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload)\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n    \r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n    );","import { types } from \"../types/types\";\r\n\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n            return { }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCOMi7HMkqEwlM-ks2wDvoQeMqDrIr-sJY\",\r\n    authDomain: \"react-app-cursos-58108.firebaseapp.com\",\r\n    databaseURL: \"https://react-app-cursos-58108.firebaseio.com\",\r\n    projectId: \"react-app-cursos-58108\",\r\n    storageBucket: \"react-app-cursos-58108.appspot.com\",\r\n    messagingSenderId: \"231455081523\",\r\n    appId: \"1:231455081523:web:214709e7d9ed397f7fcf46\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","\r\n\r\nexport const fileUpload = async ( file ) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/yukihirashirou/upload';\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        \r\n        const respuesta = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if (respuesta.ok) {\r\n            const cloudResp = await respuesta.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            throw await respuesta.json();\r\n        }\r\n\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n\r\n}","import { db } from \"../firebase/firebaseConfig\";\r\n\r\n\r\nexport const loadNotes = async ( uid ) => {\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    } );\r\n\r\n    return notes;\r\n}","import Swal from \"sweetalert2\";\r\nimport { db } from \"../firebase/firebaseConfig\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const startNewNote = () => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const uid = getState().auth.uid;\r\n        \r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const docRef = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n        dispatch(activeNote(docRef.id, newNote));\r\n        dispatch( addNewNote(docRef.id, newNote));\r\n    }\r\n}\r\n\r\nexport const activeNote = ( id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = ( id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload:{\r\n        id, ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async(dispatch) => {\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes));\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\n\r\nexport const startSaveNote = (note) => {\r\n    return async( dispatch, getState ) => {\r\n        const uid = getState().auth.uid;\r\n\r\n        if ( !note.url){\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update( noteToFirestore );\r\n\r\n        dispatch( refreshNote( note.id, noteToFirestore));\r\n        Swal.fire('Saved', note.title, 'success');\r\n    }\r\n}\r\n\r\n\r\nexport const refreshNote = ( id, note ) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n\r\n});\r\n\r\nexport const startUploading = ( file ) => {\r\n    return async( dispatch, getState ) => {\r\n        const { active: activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload( file );\r\n        activeNote.url = fileUrl;\r\n        \r\n        dispatch( startSaveNote( activeNote ));\r\n\r\n        Swal.close();\r\n\r\n    }\r\n}\r\n\r\nexport const startDeleting = ( id ) => {\r\n    return async( dispatch, getState) => {\r\n        const uid = getState().auth.uid;\r\n\r\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\r\n\r\n        dispatch( deleteNote(id) );\r\n    }\r\n}\r\n\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n});","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react'\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active } = useSelector(state => state.notes);\r\n\r\n    const handleSave = () => {\r\n        dispatch(startSaveNote(active));\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if( file) {\r\n            dispatch( startUploading(file) );\r\n        }\r\n    }\r\n\r\n    const fecha = moment(new Date().getTime());\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span> { fecha.format('Do')} </span>\r\n            <span>{ fecha.format('MMMM') }</span>\r\n\r\n            <input\r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{display: 'none'}}\r\n                onChange={ handleFileChange }\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handlePictureClick }\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleSave }    \r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active:note } = useSelector(state => state.notes);\r\n    const [formValues, handleInputChange, reset ] = useForm(note);\r\n    const { body, title, id } = formValues;\r\n\r\n    const activeId = useRef( note.id );\r\n\r\n    useEffect(() => {\r\n        \r\n        if ( note.id !== activeId.current) {\r\n            reset( note );\r\n            activeId.current = note.id;\r\n        }\r\n        \r\n    }, [note, reset]);\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( activeNote(formValues.id, { ...formValues }) );\r\n\r\n    }, [formValues, dispatch]);\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting( id ) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            \r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"Some title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    value = { title }\r\n                    onChange= { handleInputChange }\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value = { body }\r\n                    onChange= { handleInputChange }\r\n                ></textarea>\r\n                \r\n                {\r\n                    (note.url) &&\r\n                    <div className=\"notes__image\">\r\n                        <img\r\n                            src={ note.url }\r\n                            alt=\"imagen\"\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n\r\n                <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={ handleDelete }\r\n                >\r\n                    Delete\r\n                </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n});","import Swal from 'sweetalert2';\r\n\r\nimport { firebase, googleAuthProvider } from '../firebase/firebaseConfig'\r\nimport { types } from \"../types/types\"\r\nimport { noteLogout } from './notes';\r\nimport { finishLoading, startLoading } from './ui'\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch(startLoading());\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then( ({user}) => {\r\n                dispatch(login(user.uid, user.displayName));\r\n                dispatch(finishLoading());\r\n            })\r\n            .catch( e => {\r\n                dispatch(finishLoading());\r\n                Swal.fire('Error', e.message, 'error');\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then( async({user}) => {\r\n                await user.updateProfile({ displayName: name })\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            })\r\n            .catch( e => {\r\n                Swal.fire('Error', e.message, 'error');\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return ( dispatch ) => {\r\n\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then(({user}) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => ({\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n});\r\n\r\n\r\nexport const startLogout = () => {\r\n    return async(dispatch) => {\r\n        await firebase.auth().signOut();\r\n        dispatch(logout());\r\n        dispatch( noteLogout() );\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n        type: types.logout\r\n});","import React from 'react'\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const noteDate = moment(date);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch( \r\n            activeNote(id, {\r\n            date, title, body, url\r\n            })\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry\"\r\n            onClick= { handleEntryClick }\r\n        >\r\n\r\n            {\r\n                url &&\r\n                <div\r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${ url })`\r\n                    }}    \r\n                ></div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    { title }\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    { body }\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{ noteDate.format('dddd') } </span>\r\n                <h4>{ noteDate.format('Do') }</h4>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry \r\n                        key={ note.id }\r\n                        { ...note }\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLoggout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch(startNewNote());\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> { name } </span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleLoggout }\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={ handleAddNew }\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New Entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br/>\r\n                Or create an entry!\r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nimport { NothingSelected } from './NothingSelected'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn\">\r\n            \r\n            <Sidebar />\r\n\r\n            <main>\r\n\r\n                {\r\n                    (active) \r\n                        ?   (<NoteScreen />)\r\n                        :   (<NothingSelected />)\r\n                }\r\n                \r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading } = useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch( startLoginEmailPassword(email, password) );\r\n    }\r\n\r\n    const handleGoogleLogin = () =>{\r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__bounce animate__bounceIn\">\r\n            <h3 className=\"auth__title\">Login</h3>\r\n            <form \r\n                onSubmit={ handleLogin }\r\n                    \r\n            >\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value = { email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value = { password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={ loading }\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social network</p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={ handleGoogleLogin }\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link to=\"/auth/register\" className=\"link\">\r\n                    Create new account\r\n                </Link>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport validator from 'validator';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\nimport { removeError, setError } from '../../actions/ui';\r\n\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    // const state = useSelector( state => state.ui );\r\n    const { msgError } = useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if (isFormValid()) {\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name));\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if(name.trim().length === 0) {\r\n            dispatch(setError('Name is required'));\r\n            return false;\r\n        } else if(!validator.isEmail(email)) {\r\n            dispatch(setError('Email is not valid'));\r\n            return false;\r\n        } else if( password !== password2 || password.length < 5) {\r\n            dispatch(setError('Password should be at least 6 characters and match each other'));\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeError());\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__bounce animate__bounceIn\">\r\n            <h3 className=\"auth__title\">Register</h3>\r\n            <form onSubmit={ handleRegister }>\r\n\r\n                {\r\n                    msgError &&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            { msgError }\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n            <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ name }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={ password2 }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <Link to=\"/auth/login\" className=\"link\">\r\n                    Already register?\r\n                </Link>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n            <div className=\"auth__main\">\r\n                <div className=\"auth__box-container\">\r\n                    <Switch>\r\n                        <Route exact path=\"/auth/login\" component={ LoginScreen } />\r\n\r\n                        <Route exact path=\"/auth/register\" component={ RegisterScreen } />\r\n\r\n                        <Redirect to=\"/auth/login\" />\r\n\r\n                    </Switch>\r\n                </div>\r\n                \r\n            </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component= { ( props) => (\r\n\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props} /> )\r\n                    : ( <Redirect to=\"/auth/login\" /> )\r\n\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component= { ( props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props} /> )\r\n\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { firebase} from '../firebase/firebaseConfig';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged( async(user) => {\r\n\r\n            // Si el user existe, comprueba el uid de dicho usuario\r\n            if (user?.uid) { \r\n                dispatch(login(user.uid, user.displayName));\r\n                setIsLoggedIn( true );\r\n\r\n                dispatch(startLoadingNotes(user.uid));\r\n            } else {\r\n                setIsLoggedIn( false );\r\n            }\r\n            setChecking(false);\r\n        });\r\n\r\n    }, [ dispatch, setChecking, setIsLoggedIn ]);  // Dependencia vacia, se ejecuta 1 sola vez\r\n\r\n    if ( checking) {\r\n        return (\r\n            <h1>Wait...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute path=\"/auth\" component={ AuthRouter } isAuthenticated={ isLoggedIn } />\r\n\r\n                    <PrivateRoute exact path=\"/\" component={ JournalScreen } isAuthenticated={ isLoggedIn } />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\n\nimport './styles/styles.scss';\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}